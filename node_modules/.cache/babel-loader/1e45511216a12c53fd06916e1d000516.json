{"ast":null,"code":"var _jsxFileName = \"/Users/marcosaraivadasilva/Documents/Workspace/NASA/worldwindST/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as satellite from \"satellite.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport AuthApi from \"./AuthApi\";\nimport axios from 'axios';\nimport * as WorldWind from \"@nasaworldwind/worldwind\";\n/**\n * TLE_LINE0: \"0 YUNHAI 1-02 DEB\"\n * @param {*} tle1  TLE_LINE1: \"1 49267U 19063AT  21271.01286517  .00004529  00000-0  16332-2 0  9997\"\n * @param {*} tle2  TLE_LINE2: \"2 49267  98.5535 296.3547 0004348 107.3701 252.8041 14.34111012 27008\"\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction invokeSatellite(tleLine1, tleLine2) {\n  // Sample TLE\n  //var tleLine1 = '1 25544U 98067A   19156.50900463  .00003075  00000-0  59442-4 0  9992';\n  //var tleLine2 = '2 25544  51.6433  59.2583 0008217  16.4489 347.6017 15.51174618173442';    \n  var satrec = satellite.twoline2satrec(tleLine1, tleLine2);\n  var positionAndVelocity = satellite.propagate(satrec, new Date()); //console.log(positionAndVelocity);\n\n  return positionAndVelocity;\n}\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState(false);\n  const [fetching, setFetching] = useState(true);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    console.log(\"component is mounted\"); //readCookie();\n    //fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} //https://www.space-track.org/documentation#howto-api_intro\n\n\n_s(App, \"EBLqCLV87q0wbXdDEGIliEyOjyY=\");\n\n_c = App;\n\nconst Home = () => {\n  // Create a WorldWindow for the canvas.\n  var wwd = new WorldWind.WorldWindow(\"canvasOne\"); // Add some image layers to the WorldWindow's globe.\n\n  wwd.addLayer(new WorldWind.BMNGOneImageLayer());\n  wwd.addLayer(new WorldWind.BMNGLandsatLayer()); // Add a compass, a coordinates display and some view controls to the WorldWindow.\n\n  wwd.addLayer(new WorldWind.CompassLayer());\n  wwd.addLayer(new WorldWind.CoordinatesDisplayLayer(wwd));\n  wwd.addLayer(new WorldWind.ViewControlsLayer(wwd));\n  const data = {\n    \"identity\": \"marcoasilvapt@gmail.com\",\n    \"password\": \"Spacenuts2021!*\",\n    \"query\": \"https://www.space-track.org/basicspacedata/query/class/gp/OBJECT_TYPE/debris/limit/3\"\n  };\n  const extra = {\n    withCredentials: true,\n    mode: 'no-cors',\n    credentials: 'same-origin',\n    headers: {\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS',\n      'Access-Control-Allow-Origin': 'http://localhost:3000',\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const fetchSpaceTrackData = () => {\n    //Auth.setAuth(true);\n    axios.post(\"https://www.space-track.org/ajaxauth/login\", data, extra).then(response => {\n      if (response.status === 200) {\n        window.mydata = response.data;\n\n        for (var i = 0; i < response.data.length; i++) {\n          console.log();\n          var coord = invokeSatellite(response.data[i].TLE_LINE1, response.data[i].TLE_LINE2); //debugger;\n          // Add a placemark\n\n          var placemarkLayer = new WorldWind.RenderableLayer(\"Placemark\");\n          wwd.addLayer(placemarkLayer);\n          var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n          placemarkAttributes.imageOffset = new WorldWind.Offset(WorldWind.OFFSET_FRACTION, 0.3, WorldWind.OFFSET_FRACTION, 0.3);\n          placemarkAttributes.labelAttributes.color = WorldWind.Color.YELLOW;\n          placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(WorldWind.OFFSET_FRACTION, 0.5, WorldWind.OFFSET_FRACTION, 1.0); //placemarkAttributes.imageSource = WorldWind.configuration.baseUrl + \"images/pushpins/plain-red.png\";\n\n          var position = new WorldWind.Position(coord.position.x, coord.position.y, coord.position.z);\n          var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n          placemark.label = response.data[i].TLE_LINE0; // debugger;\n\n          placemarkLayer.addRenderable(placemark);\n        }\n      }\n    }).catch(err => console.warn(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: fetchSpaceTrackData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Home;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/marcosaraivadasilva/Documents/Workspace/NASA/worldwindST/src/App.js"],"names":["satellite","useState","useEffect","useContext","AuthApi","axios","WorldWind","invokeSatellite","tleLine1","tleLine2","satrec","twoline2satrec","positionAndVelocity","propagate","Date","App","auth","setAuth","fetching","setFetching","data","setData","console","log","Home","wwd","WorldWindow","addLayer","BMNGOneImageLayer","BMNGLandsatLayer","CompassLayer","CoordinatesDisplayLayer","ViewControlsLayer","extra","withCredentials","mode","credentials","headers","fetchSpaceTrackData","post","then","response","status","window","mydata","i","length","coord","TLE_LINE1","TLE_LINE2","placemarkLayer","RenderableLayer","placemarkAttributes","PlacemarkAttributes","imageOffset","Offset","OFFSET_FRACTION","labelAttributes","color","Color","YELLOW","offset","position","Position","x","y","z","placemark","Placemark","label","TLE_LINE0","addRenderable","catch","err","warn"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as satellite from \"satellite.js\";\nimport {useState, useEffect, useContext} from 'react';\nimport AuthApi from \"./AuthApi\";\nimport axios from 'axios';\nimport * as WorldWind from \"@nasaworldwind/worldwind\";\n\n/**\n * TLE_LINE0: \"0 YUNHAI 1-02 DEB\"\n * @param {*} tle1  TLE_LINE1: \"1 49267U 19063AT  21271.01286517  .00004529  00000-0  16332-2 0  9997\"\n * @param {*} tle2  TLE_LINE2: \"2 49267  98.5535 296.3547 0004348 107.3701 252.8041 14.34111012 27008\"\n */\n\nfunction invokeSatellite(tleLine1, tleLine2) {\n  // Sample TLE\n  //var tleLine1 = '1 25544U 98067A   19156.50900463  .00003075  00000-0  59442-4 0  9992';\n  //var tleLine2 = '2 25544  51.6433  59.2583 0008217  16.4489 347.6017 15.51174618173442';    \n\n  var satrec = satellite.twoline2satrec(tleLine1, tleLine2);\n  var positionAndVelocity = satellite.propagate(satrec, new Date());\n\n  //console.log(positionAndVelocity);\n  return positionAndVelocity;\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [fetching, setFetching] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    console.log(\"component is mounted\");\n    //readCookie();\n    //fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\n//https://www.space-track.org/documentation#howto-api_intro\nconst Home = () => {\n\n   // Create a WorldWindow for the canvas.\n   var wwd = new WorldWind.WorldWindow(\"canvasOne\");\n  \n   // Add some image layers to the WorldWindow's globe.\n   wwd.addLayer(new WorldWind.BMNGOneImageLayer());\n   wwd.addLayer(new WorldWind.BMNGLandsatLayer());\n\n   // Add a compass, a coordinates display and some view controls to the WorldWindow.\n   wwd.addLayer(new WorldWind.CompassLayer());\n   wwd.addLayer(new WorldWind.CoordinatesDisplayLayer(wwd));\n   wwd.addLayer(new WorldWind.ViewControlsLayer(wwd));\n\n  const data = {\n    \"identity\": \"marcoasilvapt@gmail.com\",\n    \"password\": \"Spacenuts2021!*\",\n    \"query\": \"https://www.space-track.org/basicspacedata/query/class/gp/OBJECT_TYPE/debris/limit/3\"\n  };\n\n  const extra = {\n    withCredentials: true,\n    mode: 'no-cors',\n    credentials: 'same-origin',\n    headers: {\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS',\n      'Access-Control-Allow-Origin': 'http://localhost:3000', \n      'Content-Type': 'application/json'\n    }\n  }\n\n  const fetchSpaceTrackData = () => {\n    //Auth.setAuth(true);\n    axios.post(\"https://www.space-track.org/ajaxauth/login\", data, extra).then(response => {\n      if(response.status === 200){\n        \n        window.mydata = response.data;\n\n        for (var i = 0; i < response.data.length; i++) {\n          console.log();\n          var coord = invokeSatellite(response.data[i].TLE_LINE1,response.data[i].TLE_LINE2);\n\n\n          //debugger;\n          // Add a placemark\n          var placemarkLayer = new WorldWind.RenderableLayer(\"Placemark\");\n          wwd.addLayer(placemarkLayer);\n\n          var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n    \n          placemarkAttributes.imageOffset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.3,\n              WorldWind.OFFSET_FRACTION, 0.3);\n    \n          placemarkAttributes.labelAttributes.color = WorldWind.Color.YELLOW;\n          placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.5,\n              WorldWind.OFFSET_FRACTION, 1.0);\n    \n    \n          //placemarkAttributes.imageSource = WorldWind.configuration.baseUrl + \"images/pushpins/plain-red.png\";\n          var position = new WorldWind.Position(coord.position.x, coord.position.y, coord.position.z);\n          var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n          placemark.label = response.data[i].TLE_LINE0;\n    \n          // debugger;\n          placemarkLayer.addRenderable(placemark);\n        } \n      }\n    }).catch(err => console.warn(err));\n  }\n  return (\n    <div>\n      <header className=\"App-header\"> \n      {fetchSpaceTrackData()}\n      </header>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}