{"ast":null,"code":"var _jsxFileName = \"/Users/marcosaraivadasilva/Documents/Workspace/NASA/worldwindST/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport * as satellite from \"satellite.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport AuthApi from \"./AuthApi\";\nimport axios from 'axios';\n/**\n * TLE_LINE0: \"0 YUNHAI 1-02 DEB\"\n * @param {*} tle1  TLE_LINE1: \"1 49267U 19063AT  21271.01286517  .00004529  00000-0  16332-2 0  9997\"\n * @param {*} tle2  TLE_LINE2: \"2 49267  98.5535 296.3547 0004348 107.3701 252.8041 14.34111012 27008\"\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction invokeSatellite(tleLine1, tleLine2) {\n  // Sample TLE\n  //var tleLine1 = '1 25544U 98067A   19156.50900463  .00003075  00000-0  59442-4 0  9992';\n  //var tleLine2 = '2 25544  51.6433  59.2583 0008217  16.4489 347.6017 15.51174618173442';    \n  var satrec = satellite.twoline2satrec(tleLine1, tleLine2);\n  var positionAndVelocity = satellite.propagate(satrec, new Date());\n  console.log(positionAndVelocity);\n}\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState(false);\n  const [fetching, setFetching] = useState(true);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    console.log(\"component is mounted\"); //readCookie();\n    //fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n} //https://www.space-track.org/documentation#howto-api_intro\n\n\n_s(App, \"EBLqCLV87q0wbXdDEGIliEyOjyY=\");\n\n_c = App;\n\nconst Home = () => {\n  _s2();\n\n  const Auth = useContext(AuthApi);\n  const data = {\n    \"identity\": \"marcoasilvapt@gmail.com\",\n    \"password\": \"Spacenuts2021!*\",\n    \"query\": \"https://www.space-track.org/basicspacedata/query/class/gp/OBJECT_TYPE/debris/limit/3\"\n  };\n  const extra = {\n    withCredentials: true,\n    mode: 'no-cors',\n    credentials: 'same-origin',\n    headers: {\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS',\n      'Access-Control-Allow-Origin': 'http://localhost:3000',\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const fetchSpaceTrackData = () => {\n    //Auth.setAuth(true);\n    axios.post(\"https://www.space-track.org/ajaxauth/login\", data, extra).then(response => {\n      if (response.status === 200) {\n        //debugger;\n        window.mydata = response.data;\n\n        for (var i = 0; i < response.data.length; i++) {\n          console.log(response.data[i].TLE_LINE0);\n          invokeSatellite(response.data[i].TLE_LINE1, response.data[i].TLE_LINE2);\n        }\n\n        var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n        placemarkAttributes.imageOffset = new WorldWind.Offset(WorldWind.OFFSET_FRACTION, 0.3, WorldWind.OFFSET_FRACTION, 0.3);\n        placemarkAttributes.labelAttributes.color = WorldWind.Color.YELLOW;\n        placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(WorldWind.OFFSET_FRACTION, 0.5, WorldWind.OFFSET_FRACTION, 1.0); //placemarkAttributes.imageSource = WorldWind.configuration.baseUrl + \"images/pushpins/plain-red.png\";\n\n        var position = new WorldWind.Position(-3399.3709442215145, 4816.47000147257, 4048.7001629161427);\n        var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n        placemark.label = \"debris\"; // debugger;\n\n        placemarkLayer.addRenderable(placemark);\n      }\n    }).catch(err => console.warn(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: fetchSpaceTrackData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Home, \"e+B7P7jnYCaOJfuwMJd2WG+FpFM=\");\n\n_c2 = Home;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/marcosaraivadasilva/Documents/Workspace/NASA/worldwindST/src/App.js"],"names":["satellite","useState","useEffect","useContext","AuthApi","axios","invokeSatellite","tleLine1","tleLine2","satrec","twoline2satrec","positionAndVelocity","propagate","Date","console","log","App","auth","setAuth","fetching","setFetching","data","setData","Home","Auth","extra","withCredentials","mode","credentials","headers","fetchSpaceTrackData","post","then","response","status","window","mydata","i","length","TLE_LINE0","TLE_LINE1","TLE_LINE2","placemarkAttributes","WorldWind","PlacemarkAttributes","imageOffset","Offset","OFFSET_FRACTION","labelAttributes","color","Color","YELLOW","offset","position","Position","placemark","Placemark","label","placemarkLayer","addRenderable","catch","err","warn"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as satellite from \"satellite.js\";\nimport {useState, useEffect, useContext} from 'react';\nimport AuthApi from \"./AuthApi\";\nimport axios from 'axios';\n\n/**\n * TLE_LINE0: \"0 YUNHAI 1-02 DEB\"\n * @param {*} tle1  TLE_LINE1: \"1 49267U 19063AT  21271.01286517  .00004529  00000-0  16332-2 0  9997\"\n * @param {*} tle2  TLE_LINE2: \"2 49267  98.5535 296.3547 0004348 107.3701 252.8041 14.34111012 27008\"\n */\n\nfunction invokeSatellite(tleLine1, tleLine2) {\n  // Sample TLE\n  //var tleLine1 = '1 25544U 98067A   19156.50900463  .00003075  00000-0  59442-4 0  9992';\n  //var tleLine2 = '2 25544  51.6433  59.2583 0008217  16.4489 347.6017 15.51174618173442';    \n\n  var satrec = satellite.twoline2satrec(tleLine1, tleLine2);\n  var positionAndVelocity = satellite.propagate(satrec, new Date());\n\n  console.log(positionAndVelocity);\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [fetching, setFetching] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    console.log(\"component is mounted\");\n    //readCookie();\n    //fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\n//https://www.space-track.org/documentation#howto-api_intro\nconst Home = () => {\n  const Auth = useContext(AuthApi);\n\n  const data = {\n    \"identity\": \"marcoasilvapt@gmail.com\",\n    \"password\": \"Spacenuts2021!*\",\n    \"query\": \"https://www.space-track.org/basicspacedata/query/class/gp/OBJECT_TYPE/debris/limit/3\"\n  };\n\n  const extra = {\n    withCredentials: true,\n    mode: 'no-cors',\n    credentials: 'same-origin',\n    headers: {\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS',\n      'Access-Control-Allow-Origin': 'http://localhost:3000', \n      'Content-Type': 'application/json'\n    }\n  }\n\n  const fetchSpaceTrackData = () => {\n    //Auth.setAuth(true);\n    axios.post(\"https://www.space-track.org/ajaxauth/login\", data, extra).then(response => {\n      if(response.status === 200){\n        //debugger;\n        window.mydata = response.data;\n\n        for (var i = 0; i < response.data.length; i++) {\n          console.log(response.data[i].TLE_LINE0);\n          invokeSatellite(response.data[i].TLE_LINE1,response.data[i].TLE_LINE2);\n        } \n\n        var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n  \n        placemarkAttributes.imageOffset = new WorldWind.Offset(\n            WorldWind.OFFSET_FRACTION, 0.3,\n            WorldWind.OFFSET_FRACTION, 0.3);\n  \n        placemarkAttributes.labelAttributes.color = WorldWind.Color.YELLOW;\n        placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n            WorldWind.OFFSET_FRACTION, 0.5,\n            WorldWind.OFFSET_FRACTION, 1.0);\n  \n  \n        //placemarkAttributes.imageSource = WorldWind.configuration.baseUrl + \"images/pushpins/plain-red.png\";\n        var position = new WorldWind.Position(-3399.3709442215145, 4816.47000147257, 4048.7001629161427);\n        var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n        placemark.label = \"debris\";\n  \n       // debugger;\n        placemarkLayer.addRenderable(placemark);\n\n\n\n      }\n    }).catch(err => console.warn(err));\n  }\n  return (\n    <div>\n      <header className=\"App-header\"> \n      {fetchSpaceTrackData()}\n      </header>\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}